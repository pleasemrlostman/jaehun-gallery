{"version":3,"sources":["fbase.js","routes/Auth.js","components/Content.js","routes/Home.js","components/Nav.js","routes/Profile.js","components/Router.js","components/LoadingSpinner.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","errorMessage","setErrorMessage","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onSocialClick","console","log","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","className","type","placeholder","onClick","prev","style","display","Content","userObj","text","nowContentText","setNowContentText","changeTextStatus","setChangeTextStatus","deleteContent","window","confirm","doc","id","delete","attachmentUrl","refFromURL","writerNickname","uid","userId","src","update","writedDate","Home","contents","setContents","contentText","setContentText","writer","setWriter","attachment","setAttachment","writeModal","setWriteModal","today","todayYear","Date","getFullYear","todayMonth","getMonth","todayDay","getDate","todayHours","getHours","todayMinutes","getMinutes","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","collection","add","createdDate","now","alert","changeWriteModal","useEffect","orderBy","onSnapshot","snapshot","contentsObj","docs","map","data","theFile","files","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","currentTarget","accept","Nav","to","displayName","Profile","refreshUser","getMyContent","where","get","content","newDisplayName","setNewDisplayName","updateProfile","signOut","maxLength","AppRouter","isLoggedIn","exact","path","component","from","LoadingSpinner","color","height","width","timeout","App","firstInit","setFirstInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b80cc19.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\";\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { name, value },\r\n        } = e;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            }\r\n        } catch (error) {\r\n            setErrorMessage(error.message);\r\n        }\r\n    };\r\n    const changeNewAccount = () => {\r\n        setNewAccount((prev) => !prev);\r\n    };\r\n    const onSocialClick = async (e) => {\r\n        const {\r\n            target: { name },\r\n        } = e;\r\n        let provider;\r\n        if (name === \"googleLogin\") {\r\n            console.log(name);\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"githubLogin\") {\r\n            console.log(name);\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center border p-4 w-full m-auto h-screen max-w-sm\">\r\n            <form\r\n                onSubmit={onSubmit}\r\n                className=\"flex flex-col items-center justify-center w-full\"\r\n            >\r\n                <input\r\n                    className=\"border border-gray-500 w-full mb-3 p-2 rounded-lg\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    placeholder=\"이메일을 입력해주세요\"\r\n                />\r\n                <input\r\n                    className=\"border border-gray-500 w-full mb-3 p-2 rounded-lg\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    placeholder=\"비밀번호를 입력해주세요\"\r\n                />\r\n                <input\r\n                    className=\"border text-white bg-blue-600  w-full mb-3 p-2 rounded-lg\"\r\n                    type=\"submit\"\r\n                    value={newAccount ? \"회원가입\" : \"로그인\"}\r\n                />\r\n            </form>\r\n            <p className=\"p-2 text-red-500 text-xs\">{errorMessage}</p>\r\n            <p className=\"p-2 text-blue-500\" onClick={changeNewAccount}>\r\n                {newAccount ? \"로그인으로 전환하기\" : \"회원가입으로 전환하기\"}\r\n            </p>\r\n            <div className=\"flex flex-col items-center justify-center w-full\">\r\n                <button\r\n                    style={{ display: \"none\" }}\r\n                    className=\"border border-gray-500 w-full mb-3 p-2 rounded-lg\"\r\n                    onClick={onSocialClick}\r\n                    name=\"googleLogin\"\r\n                >\r\n                    구글로 로그인하기\r\n                </button>\r\n                <button\r\n                    className=\"border border-gray-500 w-full mb-3 p-2 rounded-lg\"\r\n                    onClick={onSocialClick}\r\n                    name=\"githubLogin\"\r\n                >\r\n                    깃허브로 로그인하기\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Content = ({ value, userObj }) => {\r\n    const [nowContentText, setNowContentText] = useState(value.text);\r\n    const [changeTextStatus, setChangeTextStatus] = useState(false);\r\n\r\n    const deleteContent = async () => {\r\n        const ok = window.confirm(\"정말로 삭제하시겠습니까?\");\r\n        if (ok) {\r\n            dbService.doc(`contents/${value.id}`).delete();\r\n            if (value.attachmentUrl !== \"\") {\r\n                await storageService.refFromURL(value.attachmentUrl).delete();\r\n            }\r\n        }\r\n    };\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n        setNowContentText(value);\r\n    };\r\n\r\n    const toggleTextStatus = () => {\r\n        setChangeTextStatus((prev) => !prev);\r\n    };\r\n\r\n    const changeText = (e) => {\r\n        e.preventDefault();\r\n        dbService.doc(`contents/${value.id}`).update({ text: nowContentText });\r\n        setChangeTextStatus((prev) => !prev);\r\n    };\r\n\r\n    return (\r\n        <div className=\"content border border-gray-300 flex flex-col shadow-xl p-4 rounded-xl mb-4\">\r\n            <div className=\"mb-3 flex items-center text-xs justify-between\">\r\n                <span className=\"ml-1 top-content\">\r\n                    작성자:&nbsp;{value.writerNickname}\r\n                </span>\r\n                {userObj.uid === value.userId ? (\r\n                    <div className=\"flex gap-1\">\r\n                        <button onClick={toggleTextStatus}>수정</button>\r\n                        <button onClick={deleteContent}>삭제</button>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n            {value.attachmentUrl ? (\r\n                <div>\r\n                    <img\r\n                        className=\"w-full mb-4 rounded-2xl\"\r\n                        src={value.attachmentUrl}\r\n                    />\r\n                </div>\r\n            ) : null}\r\n            {changeTextStatus ? (\r\n                <form\r\n                    onSubmit={changeText}\r\n                    className=\"flex border-black-500 border w-full mb-3\"\r\n                >\r\n                    <input\r\n                        className=\"p-3 w-10/12\"\r\n                        onChange={onChange}\r\n                        type=\"text\"\r\n                        value={nowContentText}\r\n                    />\r\n                    <input className=\"p-3 w-2/12 text-xs\" type=\"submit\" />\r\n                </form>\r\n            ) : (\r\n                <div className=\"mb-2\">{value.text}</div>\r\n            )}\r\n            <div className=\"text-xs text-right\">{value.writedDate}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Content;\r\n","import Content from \"components/Content\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [contents, setContents] = useState([]);\r\n    const [contentText, setContentText] = useState(\"\");\r\n    const [writer, setWriter] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [writeModal, setWriteModal] = useState(false);\r\n    const today = {\r\n        todayYear: new Date().getFullYear(),\r\n        todayMonth: new Date().getMonth() + 1,\r\n        todayDay: new Date().getDate(),\r\n        todayHours:\r\n            new Date().getHours() < 10\r\n                ? \"0\" + new Date().getHours()\r\n                : new Date().getHours(),\r\n        todayMinutes:\r\n            new Date().getMinutes() < 10\r\n                ? \"0\" + new Date().getMinutes()\r\n                : new Date().getMinutes(),\r\n    };\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(\r\n                attachment,\r\n                \"data_url\"\r\n            );\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        if (contentText !== \"\" && writer !== \"\") {\r\n            await dbService.collection(\"contents\").add({\r\n                text: contentText,\r\n                writedDate: `${today.todayYear}년 ${today.todayMonth}월 ${today.todayDay}일 ${today.todayHours}시 ${today.todayMinutes}분`,\r\n                createdDate: Date.now(),\r\n                writerNickname: writer,\r\n                userId: userObj.uid,\r\n                attachmentUrl,\r\n            });\r\n            setContentText(\"\");\r\n            setWriter(\"\");\r\n            setAttachment(\"\");\r\n        } else {\r\n            if (writer === \"\" && contentText === \"\") {\r\n                alert(\"닉네임과 저에게 하고싶은 말을 작성해주세요\");\r\n            } else if (writer === \"\") {\r\n                alert(\"닉네임를 입력해 주세요\");\r\n            } else if (contentText === \"\") {\r\n                alert(\"저에게 하고싶은 말을 작성해주세요\");\r\n            }\r\n        }\r\n        setWriteModal((prev) => !prev);\r\n    };\r\n    const writeContentText = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n        setContentText(value);\r\n    };\r\n    const setWriterName = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n        setWriter(value);\r\n    };\r\n    const onFileChange = (e) => {\r\n        const {\r\n            target: { files },\r\n        } = e;\r\n\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(theFile);\r\n\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n    };\r\n\r\n    const clearAttachment = () => {\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const changeWriteModal = () => {\r\n        setWriteModal((prev) => !prev);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dbService\r\n            .collection(\"contents\")\r\n            .orderBy(\"createdDate\", \"desc\")\r\n            .onSnapshot((snapshot) => {\r\n                const contentsObj = snapshot.docs.map((value) => ({\r\n                    id: value.id,\r\n                    ...value.data(),\r\n                }));\r\n                setContents(contentsObj);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {writeModal && (\r\n                <div className=\"w-full flex items-end fixed bottom-0 left-0 p-4 bg-black bg-opacity-80 h-full\">\r\n                    <div className=\"bg-white\">\r\n                        {attachment === \"\" ? null : (\r\n                            <div className=\"flex items-center justify-center p-4\">\r\n                                <img\r\n                                    className=\"w-6/12 rounded-2xl\"\r\n                                    src={attachment}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                        <div className=\"w-full\" style={{ display: \"none\" }}>\r\n                            <input\r\n                                onChange={onFileChange}\r\n                                className=\"pl-3 w-9/12\"\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                            />\r\n                            <button\r\n                                className=\"w-3/12 p-3 text-white bg-red-600\"\r\n                                onClick={clearAttachment}\r\n                            >\r\n                                삭제\r\n                            </button>\r\n                        </div>\r\n\r\n                        <form\r\n                            onSubmit={onSubmit}\r\n                            className=\"w-full flex flex-col\"\r\n                        >\r\n                            <div className=\"w-full flex flex-col\">\r\n                                <div className=\"\">\r\n                                    <input\r\n                                        onChange={setWriterName}\r\n                                        value={writer}\r\n                                        placeholder=\"닉네임\"\r\n                                        className=\"w-3/12 p-3 border\"\r\n                                    />\r\n                                    <input\r\n                                        onChange={writeContentText}\r\n                                        value={contentText}\r\n                                        className=\"border w-9/12 p-3 rounded\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"나에게 하고싶은 말 작성해\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"flex items-center justify-center\">\r\n                                    <input\r\n                                        className=\"w-6/12 p-3  text-white bg-blue-600\"\r\n                                        type=\"submit\"\r\n                                        value=\"작성하기\"\r\n                                    />\r\n                                    <div\r\n                                        onClick={changeWriteModal}\r\n                                        className=\"w-6/12 p-3 text-center bg-gray-400 text-white\"\r\n                                    >\r\n                                        취소하기\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <div className=\"flex flex-col p-4 pb-16 pt-16 mt-4\">\r\n                {contents.map((value, id) => {\r\n                    return <Content key={id} value={value} userObj={userObj} />;\r\n                })}\r\n            </div>\r\n            {writeModal ? null : (\r\n                <div\r\n                    className=\"fixed bottom-0 left-0 w-full p-5 bg-blue-600 text-white text-center\"\r\n                    onClick={changeWriteModal}\r\n                >\r\n                    한마디 남기기\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Nav = ({ userObj }) => {\r\n    return (\r\n        <div className=\"flex p-5 justify-between bg-blue-600 text-white fixed w-full top-0 left-0\">\r\n            <h1 className=\"font-bold\">정재훈 갤러리</h1>\r\n            <div className=\"flex gap-3\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/profile\">\r\n                    {userObj.displayName === null\r\n                        ? \"닉네임설정\"\r\n                        : userObj.displayName + \"의 프로필\"}\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const onLogOutClick = () => authService.signOut();\r\n    const getMyContent = async () => {\r\n        const content = await dbService\r\n            .collection(\"contents\")\r\n            .where(\"userId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdDate\", \"desc\")\r\n            .get();\r\n        console.log(content);\r\n    };\r\n\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName });\r\n            refreshUser();\r\n        }\r\n    };\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMyContent();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"w-full fixed left-0 bottom-0 p-5 bg-red-600 text-white text-center\">\r\n                <button onClick={onLogOutClick}>LogOut</button>\r\n            </div>\r\n            <div className=\"p-3 pt-16 mt-4\">\r\n                <form\r\n                    onSubmit={onSubmit}\r\n                    className=\"flex border-black-500 border w-full mb-3\"\r\n                >\r\n                    <input\r\n                        onChange={onChange}\r\n                        className=\"p-3 w-9/12\"\r\n                        type=\"text\"\r\n                        placeholder=\"사용하실 닉네임을 작성해주세요\"\r\n                        maxLength=\"6\"\r\n                        value={newDisplayName}\r\n                    />\r\n                    <input\r\n                        className=\"p-3 w-3/12 text-xs\"\r\n                        type=\"submit\"\r\n                        value=\"닉네임 변경\"\r\n                    ></input>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Redirect,\r\n    Route,\r\n    Switch,\r\n} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Nav from \"components/Nav\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn ? <Nav userObj={userObj} /> : null}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile\r\n                                userObj={userObj}\r\n                                refreshUser={refreshUser}\r\n                            />\r\n                        </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\" component={Auth} />\r\n                )}\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import Loader from \"react-loader-spinner\";\r\n\r\nconst LoadingSpinner = () => {\r\n    return (\r\n        <div className=\"flex items-center justify-center h-screen\">\r\n            <Loader\r\n                type=\"Oval\"\r\n                color=\"#337aee\"\r\n                height={80}\r\n                width={80}\r\n                timeout={30000}\r\n            ></Loader>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import AppRouter from \"./Router\";\r\nimport LoadingSpinner from \"components/LoadingSpinner\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n    const [firstInit, setFirstInit] = useState(false);\r\n    const [userObj, setUserObj] = useState(null);\r\n    const refreshUser = () => {\r\n        const user = authService.currentUser;\r\n        setUserObj({\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        authService.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setUserObj({\r\n                    uid: user.uid,\r\n                    displayName: user.displayName,\r\n                    updateProfile: (args) => user.updateProfile(args),\r\n                });\r\n            } else {\r\n                setUserObj(false);\r\n            }\r\n            setFirstInit(true);\r\n        });\r\n    }, []);\r\n    return (\r\n        <div className=\"App\">\r\n            {firstInit ? (\r\n                <AppRouter\r\n                    isLoggedIn={Boolean(userObj)}\r\n                    userObj={userObj}\r\n                    refreshUser={refreshUser}\r\n                />\r\n            ) : (\r\n                <LoadingSpinner />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"components/App\";\r\nimport \"index.css\";\r\nimport \"style.css\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}